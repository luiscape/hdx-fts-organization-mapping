o = (i-1) * 1000
url = paste0('http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=', o)
doc = fromJSON(getURL(url))
total = length(doc$data)
for (j in 1:total) {
# schema of data.frame
it <- data.frame(rw_id = doc$data[[j]]$id,
name = ifelse(is.null(doc$data[[j]]$name), NA, doc$data[[j]]$name),
shortname = ifelse(is.null(doc$data[[j]]$shortname), NA, doc$data[[j]]$shortname),
longname = ifelse(doc$data[[j]]$longname, NA, doc$data[[j]]$longname))
# assembling final data.frame
if (j == 1) out <- it
else out <- rbind(out, it)
}
cat(paste(i, "out of 4 done."))
}
return(out)
}
y <- getRw()
o = (i-1) * 1000
getRw <- function() {
url = 'http://api.rwlabs.org/v1/sources'
doc = fromJSON(getURL(url))
total_it = round(doc$totalCount / 1000)
o = 0
for (i in 1:total_it) {
o = (i-1) * 1000
url = paste0('http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=', o)
doc = fromJSON(getURL(url))
total = length(doc$data)
for (j in 1:total) {
# schema of data.frame
it <- data.frame(rw_id = doc$data[[j]]$id,
name = ifelse(is.null(doc$data[[j]]$name), NA, doc$data[[j]]$name),
shortname = ifelse(is.null(doc$data[[j]]$shortname), NA, doc$data[[j]]$shortname),
longname = ifelse(doc$data[[j]]$longname, NA, doc$data[[j]]$longname))
# assembling final data.frame
if (j == 1) out <- it
else out <- rbind(out, it)
}
cat(paste(i, "out of 4 done."))
}
return(out)
}
y <- getRw()
o = (i-1) * 1000
o
url = paste0('http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=', o)
doc = fromJSON(getURL(url))
url = 'http://api.rwlabs.org/v1/sources'
doc = fromJSON(getURL(url))
total_it = round(doc$totalCount / 1000)
url = 'http://api.rwlabs.org/v1/sources'
doc = fromJSON(getURL(url))
total_it = round(doc$totalCount / 1000)
total_it
o = 0
getRw <- function() {
url = 'http://api.rwlabs.org/v1/sources'
doc = fromJSON(getURL(url))
total_it = round(doc$totalCount / 1000)
for (i in 1:total_it) {
o = (i-1) * 1000
url = paste0('http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=', o)
doc = fromJSON(getURL(url))
total = length(doc$data)
for (j in 1:total) {
# schema of data.frame
it <- data.frame(rw_id = doc$data[[j]]$id,
name = ifelse(is.null(doc$data[[j]]$name), NA, doc$data[[j]]$name),
shortname = ifelse(is.null(doc$data[[j]]$shortname), NA, doc$data[[j]]$shortname),
longname = ifelse(doc$data[[j]]$longname, NA, doc$data[[j]]$longname))
# assembling final data.frame
if (j == 1) out <- it
else out <- rbind(out, it)
}
# cat(paste(i, "out of 4 done."))
}
return(out)
}
y <- getRw()
getRw <- function() {
url = 'http://api.rwlabs.org/v1/sources'
doc = fromJSON(getURL(url))
total_it = round(doc$totalCount / 1000)
for (i in 1:total_it) {
o = (i-1) * 1000
url = paste0('http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=', o)
print(url)
doc = fromJSON(getURL(url))
total = length(doc$data)
for (j in 1:total) {
# schema of data.frame
it <- data.frame(rw_id = doc$data[[j]]$id,
name = ifelse(is.null(doc$data[[j]]$name), NA, doc$data[[j]]$name),
shortname = ifelse(is.null(doc$data[[j]]$shortname), NA, doc$data[[j]]$shortname),
longname = ifelse(doc$data[[j]]$longname, NA, doc$data[[j]]$longname))
# assembling final data.frame
if (j == 1) out <- it
else out <- rbind(out, it)
}
cat(paste(i, "out of 4 done."))
}
return(out)
}
y <- getRw()
getRw <- function() {
url = 'http://api.rwlabs.org/v1/sources'
doc = fromJSON(getURL(url))
total_it = round(doc$totalCount / 1000)
for (i in 1:total_it) {
o = (i-1) * 1000
url = paste0('http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=', o)
print(url)
# doc = fromJSON(getURL(url))
total = length(doc$data)
for (j in 1:total) {
# schema of data.frame
it <- data.frame(rw_id = doc$data[[j]]$id,
name = ifelse(is.null(doc$data[[j]]$name), NA, doc$data[[j]]$name),
shortname = ifelse(is.null(doc$data[[j]]$shortname), NA, doc$data[[j]]$shortname),
longname = ifelse(doc$data[[j]]$longname, NA, doc$data[[j]]$longname))
# assembling final data.frame
if (j == 1) out <- it
else out <- rbind(out, it)
}
cat(paste(i, "out of 4 done."))
}
return(out)
}
y <- getRw()
url = paste0('http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=', o)
url = paste0('http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=', o)
print(url)
doc = fromJSON(getURL(url))
paste0('http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=', o)
url = "http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=0"
doc = fromJSON(getURL(url))
url = paste0("http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=", o)
print(url)
doc = fromJSON(getURL(url))
library(rjson)
doc = fromJSON(getURL(url))
library(jsonlite)
doc = fromJSON(getURL(url))
library(jsonlite)
getRw <- function() {
url = 'http://api.rwlabs.org/v1/sources'
doc = fromJSON(getURL(url))
total_it = round(doc$totalCount / 300)
for (i in 1:total_it) {
o = (i-1) * 300
url = paste0("http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=", o)
print(url)
doc = fromJSON(getURL(url))
total = length(doc$data)
for (j in 1:total) {
# schema of data.frame
it <- data.frame(rw_id = doc$data[[j]]$id,
name = ifelse(is.null(doc$data[[j]]$name), NA, doc$data[[j]]$name),
shortname = ifelse(is.null(doc$data[[j]]$shortname), NA, doc$data[[j]]$shortname),
longname = ifelse(doc$data[[j]]$longname, NA, doc$data[[j]]$longname))
# assembling final data.frame
if (j == 1) out <- it
else out <- rbind(out, it)
}
cat(paste(i, "out of 4 done."))
}
return(out)
}
y <- getRw()
j = 1
doc$data[[j]]$id
ifelse(is.null(doc$data[[j]]$name), NA, doc$data[[j]]$name)
ifelse(is.null(doc$data[[j]]$shortname), NA, doc$data[[j]]$shortname)
ifelse(doc$data[[j]]$longname, NA, doc$data[[j]]$longname)
library(jsonlite)
getRw <- function() {
url = 'http://api.rwlabs.org/v1/sources'
doc = fromJSON(getURL(url))
total_it = round(doc$totalCount / 300)
for (i in 1:total_it) {
o = (i-1) * 300
url = paste0("http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=", o)
print(url)
doc = fromJSON(getURL(url))
total = length(doc$data)
for (j in 1:total) {
# schema of data.frame
it <- data.frame(rw_id = doc$data[[j]]$id,
name = ifelse(is.null(doc$data[[j]]$name), NA, doc$data[[j]]$name),
shortname = ifelse(is.null(doc$data[[j]]$shortname), NA, doc$data[[j]]$shortname),
longname = ifelse(is.null(doc$data[[j]]$longname), NA, doc$data[[j]]$longname))
# assembling final data.frame
if (j == 1) out <- it
else out <- rbind(out, it)
}
cat(paste(i, "out of 4 done."))
}
return(out)
}
y <- getRw()
library(jsonlite)
getRw <- function() {
url = 'http://api.rwlabs.org/v1/sources'
doc = fromJSON(getURL(url))
total_it = round(doc$totalCount / 10)
for (i in 1:total_it) {
o = (i-1) * 10
url = paste0("http://api.rwlabs.org/v1/sources?profile=full&limit=1000&offset=", o)
print(url)
doc = fromJSON(getURL(url))
total = length(doc$data)
for (j in 1:total) {
# schema of data.frame
it <- data.frame(rw_id = doc$data[[j]]$id,
name = ifelse(is.null(doc$data[[j]]$name), NA, doc$data[[j]]$name),
shortname = ifelse(is.null(doc$data[[j]]$shortname), NA, doc$data[[j]]$shortname),
longname = ifelse(is.null(doc$data[[j]]$longname), NA, doc$data[[j]]$longname))
# assembling final data.frame
if (j == 1) out <- it
else out <- rbind(out, it)
}
cat(paste(i, "out of 4 done."))
}
return(out)
}
y <- getRw()
x <- makeComparisons()
View(x)
View(fts)
# Compare
makeComparisons <- function() {
# loading local data
fts = read.csv('data/fts_organizations.csv')
hdx = read.csv('data/hdx_org_list.csv')
rw =
total = nrow(hdx)
cat('-------------------------------- \n')
cat('Making comparisons: ... \n')
pb <- txtProgressBar(min = 0, max = total, style = 3, char ='.')
for(i in 1:total) {
setTxtProgressBar(pb, i)
it <- data.frame(hdx_id = hdx$display_name[i],
fts_n_perfect = length(grep(hdx$display_name[i], fts$abbreviation)) + length(grep(hdx$display_name[i], fts$name)),
fts_n_fuzzy = length(agrep(hdx$display_name[i], fts$name)) + length(agrep(hdx$display_name[i], fts$abbreviation)),
rw_n_perfect = NA,
rw_n_fuzzy = NA)
if (i == 1) out <- it
else out <- rbind(out, it)
}
cat('\nDone.\n')
cat('-------------------------------- \n')
return(out)
}
x <- makeComparisons()
View(x)
View(x)
length(x[x$fts_n_perfect == 1, ])
y <- x[x$fts_n_perfect == 1, ]
View(y)
nrow(y) / nrow(x)
total = nrow(hdx)
View(fts)
# Compare
makeComparisons <- function() {
# loading local data
fts = read.csv('data/fts_organizations.csv')
hdx = read.csv('data/hdx_org_list.csv')
rw =
total = nrow(hdx)
cat('-------------------------------- \n')
cat('Making comparisons: ... \n')
pb <- txtProgressBar(min = 0, max = total, style = 3, char ='.')
for(i in 1:total) {
setTxtProgressBar(pb, i)
fts_n_perfect = length(grep(hdx$display_name[i], fts$abbreviation)) + length(grep(hdx$display_name[i], fts$name))
if (fts_n_perfect == 1) {
fts_id = fts[grep(hdx$display_name[i], fts$abbreviation)),]$id
}
else fts_id = NA
it <- data.frame(hdx_id = hdx$display_name[i],
fts_id = fts_id,
fts_n_perfect = fts_n_perfect,
fts_n_fuzzy = length(agrep(hdx$display_name[i], fts$name)) + length(agrep(hdx$display_name[i], fts$abbreviation)),
rw_n_perfect = NA,
rw_n_fuzzy = NA)
if (i == 1) out <- it
else out <- rbind(out, it)
}
cat('\nDone.\n')
cat('-------------------------------- \n')
return(out)
}
x <- makeComparisons()
makeComparisons <- function() {
# loading local data
fts = read.csv('data/fts_organizations.csv')
hdx = read.csv('data/hdx_org_list.csv')
rw =
total = nrow(hdx)
cat('-------------------------------- \n')
cat('Making comparisons: ... \n')
pb <- txtProgressBar(min = 0, max = total, style = 3, char ='.')
for(i in 1:total) {
setTxtProgressBar(pb, i)
fts_n_perfect = length(grep(hdx$display_name[i], fts$abbreviation)) + length(grep(hdx$display_name[i], fts$name))
if (fts_n_perfect == 1) {
fts_id = fts[grep(hdx$display_name[i], fts$abbreviation)),]$id
}
else fts_id = NA
it <- data.frame(hdx_id = hdx$display_name[i],
fts_id = fts_id,
fts_n_perfect = fts_n_perfect,
fts_n_fuzzy = length(agrep(hdx$display_name[i], fts$name)) + length(agrep(hdx$display_name[i], fts$abbreviation)),
rw_n_perfect = NA,
rw_n_fuzzy = NA)
if (i == 1) out <- it
else out <- rbind(out, it)
}
cat('\nDone.\n')
cat('-------------------------------- \n')
return(out)
}
makeComparisons <- function() {
# loading local data
fts = read.csv('data/fts_organizations.csv')
hdx = read.csv('data/hdx_org_list.csv')
rw =
total = nrow(hdx)
cat('-------------------------------- \n')
cat('Making comparisons: ... \n')
pb <- txtProgressBar(min = 0, max = total, style = 3, char ='.')
for(i in 1:total) {
setTxtProgressBar(pb, i)
fts_n_perfect = length(grep(hdx$display_name[i], fts$abbreviation)) + length(grep(hdx$display_name[i], fts$name))
if (fts_n_perfect == 1) {
fts_id = fts[grep(hdx$display_name[i], fts$abbreviation)),]$id
}
else fts_id = NA
it <- data.frame(hdx_id = hdx$display_name[i],
fts_id = fts_id,
fts_n_perfect = fts_n_perfect,
fts_n_fuzzy = length(agrep(hdx$display_name[i], fts$name)) + length(agrep(hdx$display_name[i], fts$abbreviation)),
rw_n_perfect = NA,
rw_n_fuzzy = NA)
if (i == 1) out <- it
else out <- rbind(out, it)
}
cat('\nDone.\n')
cat('-------------------------------- \n')
return(out)
}
makeComparisons <- function() {
# loading local data
fts = read.csv('data/fts_organizations.csv')
hdx = read.csv('data/hdx_org_list.csv')
rw =
total = nrow(hdx)
cat('-------------------------------- \n')
cat('Making comparisons: ... \n')
pb <- txtProgressBar(min = 0, max = total, style = 3, char ='.')
for(i in 1:total) {
setTxtProgressBar(pb, i)
fts_n_perfect = length(grep(hdx$display_name[i], fts$abbreviation)) + length(grep(hdx$display_name[i], fts$name))
if (fts_n_perfect == 1) {
fts_id = fts[grep(hdx$display_name[i], fts$abbreviation)),]$id
} else fts_id = NA
it <- data.frame(hdx_id = hdx$display_name[i],
fts_id = fts_id,
fts_n_perfect = fts_n_perfect,
fts_n_fuzzy = length(agrep(hdx$display_name[i], fts$name)) + length(agrep(hdx$display_name[i], fts$abbreviation)),
rw_n_perfect = NA,
rw_n_fuzzy = NA)
if (i == 1) out <- it
else out <- rbind(out, it)
}
cat('\nDone.\n')
cat('-------------------------------- \n')
return(out)
}
makeComparisons <- function() {
# loading local data
fts = read.csv('data/fts_organizations.csv')
hdx = read.csv('data/hdx_org_list.csv')
rw =
total = nrow(hdx)
cat('-------------------------------- \n')
cat('Making comparisons: ... \n')
pb <- txtProgressBar(min = 0, max = total, style = 3, char ='.')
for(i in 1:total) {
setTxtProgressBar(pb, i)
fts_n_perfect = length(grep(hdx$display_name[i], fts$abbreviation)) + length(grep(hdx$display_name[i], fts$name))
if (fts_n_perfect == 1) {
fts_id = fts[grep(hdx$display_name[i], fts$abbreviation),]$id
}
else fts_id = NA
it <- data.frame(hdx_id = hdx$display_name[i],
fts_id = fts_id,
fts_n_perfect = fts_n_perfect,
fts_n_fuzzy = length(agrep(hdx$display_name[i], fts$name)) + length(agrep(hdx$display_name[i], fts$abbreviation)),
rw_n_perfect = NA,
rw_n_fuzzy = NA)
if (i == 1) out <- it
else out <- rbind(out, it)
}
cat('\nDone.\n')
cat('-------------------------------- \n')
return(out)
}
x <- makeComparisons()
makeComparisons <- function() {
# loading local data
fts = read.csv('data/fts_organizations.csv')
hdx = read.csv('data/hdx_org_list.csv')
rw =
total = nrow(hdx)
cat('-------------------------------- \n')
cat('Making comparisons: ... \n')
pb <- txtProgressBar(min = 0, max = total, style = 3, char ='.')
for(i in 1:total) {
setTxtProgressBar(pb, i)
fts_n_perfect = length(grep(hdx$display_name[i], fts$abbreviation)) + length(grep(hdx$display_name[i], fts$name))
if (fts_n_perfect == 1) fts_id = fts[grep(hdx$display_name[i], fts$abbreviation),]$id
it <- data.frame(hdx_id = hdx$display_name[i],
fts_id = ifelse(if.na(fts_id), NA, fts_id),
fts_n_perfect = fts_n_perfect,
fts_n_fuzzy = length(agrep(hdx$display_name[i], fts$name)) + length(agrep(hdx$display_name[i], fts$abbreviation)),
rw_n_perfect = NA,
rw_n_fuzzy = NA)
if (i == 1) out <- it
else out <- rbind(out, it)
}
cat('\nDone.\n')
cat('-------------------------------- \n')
return(out)
}
x <- makeComparisons()
# Compare
makeComparisons <- function() {
# loading local data
fts = read.csv('data/fts_organizations.csv')
hdx = read.csv('data/hdx_org_list.csv')
rw =
total = nrow(hdx)
cat('-------------------------------- \n')
cat('Making comparisons: ... \n')
pb <- txtProgressBar(min = 0, max = total, style = 3, char ='.')
for(i in 1:total) {
setTxtProgressBar(pb, i)
fts_n_perfect = length(grep(hdx$display_name[i], fts$abbreviation)) + length(grep(hdx$display_name[i], fts$name))
if (fts_n_perfect == 1) fts_id = fts[grep(hdx$display_name[i], fts$abbreviation),]$id
it <- data.frame(hdx_id = hdx$display_name[i],
fts_id = ifelse(is.na(fts_id), NA, fts_id),
fts_n_perfect = fts_n_perfect,
fts_n_fuzzy = length(agrep(hdx$display_name[i], fts$name)) + length(agrep(hdx$display_name[i], fts$abbreviation)),
rw_n_perfect = NA,
rw_n_fuzzy = NA)
if (i == 1) out <- it
else out <- rbind(out, it)
}
cat('\nDone.\n')
cat('-------------------------------- \n')
return(out)
}
x <- makeComparisons()
hdx_id = hdx$display_name[i]
hdx_id
View(hdx)
makeComparisons <- function() {
# loading local data
fts = read.csv('data/fts_organizations.csv')
hdx = read.csv('data/hdx_org_list.csv')
rw =
total = nrow(hdx)
cat('-------------------------------- \n')
cat('Making comparisons: ... \n')
pb <- txtProgressBar(min = 0, max = total, style = 3, char ='.')
for(i in 1:total) {
setTxtProgressBar(pb, i)
fts_n_perfect = length(grep(hdx$display_name[i], fts$abbreviation)) + length(grep(hdx$display_name[i], fts$name))
if (fts_n_perfect == 1) fts_id = fts[grep(hdx$display_name[i], fts$abbreviation),]$id
it <- data.frame(hdx_id = hdx$name[i],
fts_id = ifelse(is.na(fts_id), NA, fts_id),
fts_n_perfect = fts_n_perfect,
fts_n_fuzzy = length(agrep(hdx$display_name[i], fts$name)) + length(agrep(hdx$display_name[i], fts$abbreviation)),
rw_n_perfect = NA,
rw_n_fuzzy = NA)
if (i == 1) out <- it
else out <- rbind(out, it)
}
cat('\nDone.\n')
cat('-------------------------------- \n')
return(out)
}
x <- makeComparisons()
View(x)
View(x)
View(y)
View(x)
y <- x[x$fts_n_perfect != 0,]
nrow(y) / nrow(x)
y <- x[x$fts_n_perfect != 0 & x$fts_n_perfect != 0,]
nrow(y)
nrow(y) / nrow(x)
View(y)
y <- x[x$fts_n_perfect != 0 && x$fts_n_perfect != 0,]
View(y)
y <- x[x$fts_n_perfect != 0 & x$fts_n_perfect != 1,]
View(y)
nrow(y)
nrow(y) / nrow(x)
